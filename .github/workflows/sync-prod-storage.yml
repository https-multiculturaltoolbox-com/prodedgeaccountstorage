name: Sync Azure Blob (chunked) to Repo

on:
  workflow_dispatch:
    inputs:
      prefixes:
        description: "Space-separated prefixes (use '.' for whole container)"
        required: true
        default: "."

permissions:
  contents: write

env:
  AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
  AZURE_CONTAINER: ${{ secrets.AZURE_CONTAINER }}

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure git author
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Install AzCopy (v10)
        run: |
          set -e
          curl -sL https://aka.ms/downloadazcopy-v10-linux | tar -xz --strip-components=1
          sudo mv azcopy /usr/local/bin/azcopy
          azcopy --version

      - name: Download and commit per chunk (account key auth + root fallback + robust)
        env:
          PREFIXES: ${{ github.event.inputs.prefixes }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
        run: |
          set -euo pipefail
          : "${AZURE_STORAGE_KEY:?AZURE_STORAGE_KEY missing}"
          : "${AZURE_STORAGE_ACCOUNT:?AZURE_STORAGE_ACCOUNT missing}"
          : "${AZURE_CONTAINER:?AZURE_CONTAINER missing}"
          : "${PREFIXES:?No prefixes provided}"

          # Improve stability on busy runners
          ulimit -n 65536 || true

          # AzCopy auth & tuning
          export AZCOPY_ACCOUNT_KEY="${AZURE_STORAGE_KEY}"
          export AZCOPY_CONCURRENCY_VALUE=8     # <-- use env var instead of a CLI flag
          export AZCOPY_LOG_LOCATION="$(pwd)/.azcopy-logs"
          mkdir -p "$AZCOPY_LOG_LOCATION"

          TMPROOT="$(mktemp -d)"
          trap 'rm -rf "$TMPROOT"' EXIT

          HAD_ERRORS=0

          for p in $PREFIXES; do
            if [ "$p" = "." ] || [ "$p" = "/" ] || [ -z "$p" ]; then
              SRC_URL="https://${AZURE_STORAGE_ACCOUNT}.blob.core.windows.net/${AZURE_CONTAINER}"
              TARGET_DIR="."
              LABEL="(root)"
              DEST_LOCAL="${TMPROOT}/root"
            else
              SRC_URL="https://${AZURE_STORAGE_ACCOUNT}.blob.core.windows.net/${AZURE_CONTAINER}/${p}"
              TARGET_DIR="./$p"
              LABEL="$p"
              DEST_LOCAL="${TMPROOT}/${p}"
            fi

            echo "==> Downloading: $LABEL"
            mkdir -p "$DEST_LOCAL"

            # Run AzCopy; don't hard-fail if it returns non-zero
            set +e
            azcopy copy "$SRC_URL" "$DEST_LOCAL" --recursive --log-level INFO
            AC_STATUS=$?
            set -e

            # Summarize errors (if any)
            LASTLOG="$(ls -t .azcopy-logs/*.log 2>/dev/null | head -n1 || true)"
            if [ "$AC_STATUS" -ne 0 ]; then
              HAD_ERRORS=1
              echo "::warning::AzCopy returned $AC_STATUS on $LABEL. See $LASTLOG"
              if [ -n "$LASTLOG" ]; then
                echo "---- AzCopy error samples for $LABEL ----"
                tail -n 200 "$LASTLOG" | sed 's/^/LOG: /'
                echo "----------------------------------------"
              fi
            fi

            echo "==> Copy into repo: $LABEL"
            mkdir -p "$TARGET_DIR"
            rsync -a "$DEST_LOCAL"/ "$TARGET_DIR"/ || true

            echo "==> Commit & push for $LABEL"
            git add "$TARGET_DIR"
            if ! git diff --cached --quiet -- "$TARGET_DIR"; then
              git commit -m "Sync from Azure ${LABEL} - $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
              git push
            else
              echo "No changes for ${LABEL}."
            fi

            echo "==> Clean temp for $LABEL"
            rm -rf "$DEST_LOCAL"
          done

          echo "AzCopy logs at: $AZCOPY_LOG_LOCATION"

          # If you prefer the job to fail on partial errors, uncomment:
          # if [ "$HAD_ERRORS" -ne 0 ]; then exit 1; fi
