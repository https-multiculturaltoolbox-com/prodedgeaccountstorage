name: Sync prodedgeaccountstorage to repo

on:
  schedule:
    - cron: "0 2 * * *"   # daily 02:00 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Use the official Azure CLI action (correct one)
      - name: Sync all containers
        uses: azure/CLI@v2
        env:
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
        with:
          azcliversion: 2.63.0
          inlineScript: |
            set -euo pipefail

            ROOT="azure/prodedgeaccountstorage"
            mkdir -p "$ROOT"

            echo "Listing containers in: $AZURE_STORAGE_ACCOUNT"
            mapfile -t CONTAINERS < <(az storage container list \
              --account-name "$AZURE_STORAGE_ACCOUNT" \
              --account-key "$AZURE_STORAGE_KEY" \
              --query "[].name" -o tsv)

            echo "Found containers: ${CONTAINERS[*]:-<none>}"

            for c in "${CONTAINERS[@]}"; do
              TARGET="$ROOT/$c"
              echo "Syncing container '$c' -> $TARGET"
              rm -rf "$TARGET"
              mkdir -p "$TARGET"

              az storage blob download-batch \
                --account-name "$AZURE_STORAGE_ACCOUNT" \
                --account-key "$AZURE_STORAGE_KEY" \
                -s "$c" \
                -d "$TARGET" \
                --no-progress
            done

      - name: Commit & push if changes
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if [[ -n "$(git status --porcelain)" ]]; then
            git add azure/prodedgeaccountstorage
            git commit -m "Sync prodedgeaccountstorage containers ($(date -u +'%Y-%m-%d %H:%M:%S UTC'))"
            git push
          else
            echo "No changes to commit."
          fi
