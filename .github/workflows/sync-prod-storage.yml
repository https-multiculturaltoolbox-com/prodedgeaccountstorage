name: Sync Azure Blob (chunked) to Repo

on:
  workflow_dispatch:
    inputs:
      prefixes:
        description: "Space-separated prefixes (use '.' for whole container)"
        required: true
        default: "."

permissions:
  contents: write

env:
  AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
  AZURE_CONTAINER:       ${{ secrets.AZURE_CONTAINER }}

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure git author & disable sparse warnings
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git sparse-checkout disable || true
          git config advice.updateSparsePath false || true

      # Optional but helpful on crowded runners
      - name: Cleanup disk space before sync (optional)
        continue-on-error: true
        run: |
          set -euxo pipefail
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /opt/ghc || true
          sudo rm -rf "/usr/local/share/boost" || true
          sudo apt-get clean || true
          df -h

      - name: Prep roomy /mnt and move repo there
        run: |
          set -euo pipefail
          sudo mkdir -p /mnt/work /mnt/aztmp
          sudo chown -R "$USER:$USER" /mnt/work /mnt/aztmp

          # Move the checked-out repo to /mnt so all writes happen on the big disk
          rsync -a --delete "$GITHUB_WORKSPACE"/ /mnt/work/repo/

          {
            echo "REPO_DIR=/mnt/work/repo"
            echo "AZTMP=/mnt/aztmp"
          } >> "$GITHUB_ENV"

          df -h / /mnt || true

      - name: Install AzCopy (v10)
        run: |
          set -euo pipefail
          curl -sL https://aka.ms/downloadazcopy-v10-linux | tar -xz --strip-components=1
          sudo mv azcopy /usr/local/bin/azcopy
          azcopy --version

      - name: Download â†’ commit per prefix (no staging copy)
        env:
          PREFIXES:          ${{ github.event.inputs.prefixes }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
        working-directory: ${{ env.REPO_DIR }}
        run: |
          set -euo pipefail

          : "${AZURE_STORAGE_KEY:?AZURE_STORAGE_KEY missing}"
          : "${AZURE_STORAGE_ACCOUNT:?AZURE_STORAGE_ACCOUNT missing}"
          : "${AZURE_CONTAINER:?AZURE_CONTAINER missing}"
          : "${PREFIXES:?No prefixes provided}"

          # Bigger file limit for busy runners
          ulimit -n 65536 || true

          # Route ALL temp files to /mnt (large disk)
          export TMPDIR="${AZTMP}"
          export TEMP="${AZTMP}"
          export TMP="${AZTMP}"

          # AzCopy auth/tuning (use env var instead of removed CLI flag)
          export AZCOPY_ACCOUNT_KEY="${AZURE_STORAGE_KEY}"
          export AZCOPY_CONCURRENCY_VALUE=8
          export AZCOPY_LOG_LOCATION="${AZTMP}/azcopy-logs"
          export AZCOPY_JOB_PLAN_LOCATION="${AZTMP}/azcopy-plan"
          mkdir -p "$AZCOPY_LOG_LOCATION" "$AZCOPY_JOB_PLAN_LOCATION"

          HAD_ERRORS=0

          for p in $PREFIXES; do
            if [ "$p" = "." ] || [ "$p" = "/" ] || [ -z "$p" ]; then
              SRC_URL="https://${AZURE_STORAGE_ACCOUNT}.blob.core.windows.net/${AZURE_CONTAINER}"
              TARGET_DIR="."
              LABEL="(root)"
            else
              SRC_URL="https://${AZURE_STORAGE_ACCOUNT}.blob.core.windows.net/${AZURE_CONTAINER}/${p}"
              TARGET_DIR="./$p"
              LABEL="$p"
            fi

            echo "==> Downloading into repo: $LABEL -> $TARGET_DIR"
            mkdir -p "$TARGET_DIR"

            # Direct-copy into the repo (avoids doubling disk usage)
            set +e
            azcopy copy "$SRC_URL" "$TARGET_DIR" --recursive --overwrite=true --log-level INFO
            AC_STATUS=$?
            set -e

            LASTLOG="$(ls -t "${AZCOPY_LOG_LOCATION}"/*.log 2>/dev/null | head -n1 || true)"
            if [ "$AC_STATUS" -ne 0 ]; then
              HAD_ERRORS=1
              echo "::warning::AzCopy returned $AC_STATUS for ${LABEL}. See $LASTLOG"
              if [ -n "$LASTLOG" ]; then
                echo "---- AzCopy error tail (${LABEL}) ----"
                tail -n 200 "$LASTLOG" | sed 's/^/LOG: /'
                echo "---------------------------------------"
              fi
            fi

            echo "==> Git add/commit/push: $LABEL"
            # Ensure git also uses /mnt for any temps
            export TMPDIR="${AZTMP}"
            git add --all "$TARGET_DIR" || true
            if ! git diff --cached --quiet -- "$TARGET_DIR"; then
              git commit -m "Sync from Azure ${LABEL} - $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
              git push
              # Keep object store compact on the runner
              git gc --prune=now || true
            else
              echo "No changes for ${LABEL}."
            fi

            df -h "$PWD" /mnt || true
          done

          echo "AzCopy logs at: $AZCOPY_LOG_LOCATION"

          # Uncomment to fail the job if any AzCopy errors occurred
          # if [ "$HAD_ERRORS" -ne 0 ]; then
          #   echo "::error::Finished with AzCopy errors (see logs)."
          #   exit 1
          # fi
